// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<BookItem /> shallow renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BookItem
    author={
      Array [
        "Marcio G.",
      ]
    }
    backgroundImage="https://i.ytimg.com/vi/PKffm2uI4dk/maxresdefault.jpg"
    onChangeShelf={[Function]}
    shelf="read"
    title="React Development"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="book-top"
        >
          <div
            className="book-cover"
            style={
              Object {
                "backgroundImage": "url(https://i.ytimg.com/vi/PKffm2uI4dk/maxresdefault.jpg)",
                "height": 193,
                "width": 128,
              }
            }
          />
          <div
            className="book-shelf-changer"
          >
            <select
              onChange={[Function]}
              value="read"
            >
              <option
                disabled={true}
                value="none"
              >
                Move to...
              </option>
              <option
                value="currentlyReading"
              >
                Currently Reading
              </option>
              <option
                value="wantToRead"
              >
                Want to Read
              </option>
              <option
                value="read"
              >
                Read
              </option>
              <option
                value="none"
              >
                None
              </option>
            </select>
          </div>
        </div>,
        <div
          className="book-title"
        >
          React Development
        </div>,
        <div
          className="book-authors"
        >
          Marcio G.
        </div>,
      ],
      "className": "book",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="book-cover"
              style={
                Object {
                  "backgroundImage": "url(https://i.ytimg.com/vi/PKffm2uI4dk/maxresdefault.jpg)",
                  "height": 193,
                  "width": 128,
                }
              }
            />,
            <div
              className="book-shelf-changer"
            >
              <select
                onChange={[Function]}
                value="read"
              >
                <option
                  disabled={true}
                  value="none"
                >
                  Move to...
                </option>
                <option
                  value="currentlyReading"
                >
                  Currently Reading
                </option>
                <option
                  value="wantToRead"
                >
                  Want to Read
                </option>
                <option
                  value="read"
                >
                  Read
                </option>
                <option
                  value="none"
                >
                  None
                </option>
              </select>
            </div>,
          ],
          "className": "book-top",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "book-cover",
              "style": Object {
                "backgroundImage": "url(https://i.ytimg.com/vi/PKffm2uI4dk/maxresdefault.jpg)",
                "height": 193,
                "width": 128,
              },
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <select
                onChange={[Function]}
                value="read"
              >
                <option
                  disabled={true}
                  value="none"
                >
                  Move to...
                </option>
                <option
                  value="currentlyReading"
                >
                  Currently Reading
                </option>
                <option
                  value="wantToRead"
                >
                  Want to Read
                </option>
                <option
                  value="read"
                >
                  Read
                </option>
                <option
                  value="none"
                >
                  None
                </option>
              </select>,
              "className": "book-shelf-changer",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    disabled={true}
                    value="none"
                  >
                    Move to...
                  </option>,
                  <option
                    value="currentlyReading"
                  >
                    Currently Reading
                  </option>,
                  <option
                    value="wantToRead"
                  >
                    Want to Read
                  </option>,
                  <option
                    value="read"
                  >
                    Read
                  </option>,
                  <option
                    value="none"
                  >
                    None
                  </option>,
                ],
                "onChange": [Function],
                "value": "read",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Move to...",
                    "disabled": true,
                    "value": "none",
                  },
                  "ref": null,
                  "rendered": "Move to...",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Currently Reading",
                    "value": "currentlyReading",
                  },
                  "ref": null,
                  "rendered": "Currently Reading",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Want to Read",
                    "value": "wantToRead",
                  },
                  "ref": null,
                  "rendered": "Want to Read",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Read",
                    "value": "read",
                  },
                  "ref": null,
                  "rendered": "Read",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "None",
                    "value": "none",
                  },
                  "ref": null,
                  "rendered": "None",
                  "type": "option",
                },
              ],
              "type": "select",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "React Development",
          "className": "book-title",
        },
        "ref": null,
        "rendered": "React Development",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Marcio G.",
          ],
          "className": "book-authors",
        },
        "ref": null,
        "rendered": Array [
          "Marcio G.",
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="book-top"
          >
            <div
              className="book-cover"
              style={
                Object {
                  "backgroundImage": "url(https://i.ytimg.com/vi/PKffm2uI4dk/maxresdefault.jpg)",
                  "height": 193,
                  "width": 128,
                }
              }
            />
            <div
              className="book-shelf-changer"
            >
              <select
                onChange={[Function]}
                value="read"
              >
                <option
                  disabled={true}
                  value="none"
                >
                  Move to...
                </option>
                <option
                  value="currentlyReading"
                >
                  Currently Reading
                </option>
                <option
                  value="wantToRead"
                >
                  Want to Read
                </option>
                <option
                  value="read"
                >
                  Read
                </option>
                <option
                  value="none"
                >
                  None
                </option>
              </select>
            </div>
          </div>,
          <div
            className="book-title"
          >
            React Development
          </div>,
          <div
            className="book-authors"
          >
            Marcio G.
          </div>,
        ],
        "className": "book",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="book-cover"
                style={
                  Object {
                    "backgroundImage": "url(https://i.ytimg.com/vi/PKffm2uI4dk/maxresdefault.jpg)",
                    "height": 193,
                    "width": 128,
                  }
                }
              />,
              <div
                className="book-shelf-changer"
              >
                <select
                  onChange={[Function]}
                  value="read"
                >
                  <option
                    disabled={true}
                    value="none"
                  >
                    Move to...
                  </option>
                  <option
                    value="currentlyReading"
                  >
                    Currently Reading
                  </option>
                  <option
                    value="wantToRead"
                  >
                    Want to Read
                  </option>
                  <option
                    value="read"
                  >
                    Read
                  </option>
                  <option
                    value="none"
                  >
                    None
                  </option>
                </select>
              </div>,
            ],
            "className": "book-top",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "book-cover",
                "style": Object {
                  "backgroundImage": "url(https://i.ytimg.com/vi/PKffm2uI4dk/maxresdefault.jpg)",
                  "height": 193,
                  "width": 128,
                },
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <select
                  onChange={[Function]}
                  value="read"
                >
                  <option
                    disabled={true}
                    value="none"
                  >
                    Move to...
                  </option>
                  <option
                    value="currentlyReading"
                  >
                    Currently Reading
                  </option>
                  <option
                    value="wantToRead"
                  >
                    Want to Read
                  </option>
                  <option
                    value="read"
                  >
                    Read
                  </option>
                  <option
                    value="none"
                  >
                    None
                  </option>
                </select>,
                "className": "book-shelf-changer",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <option
                      disabled={true}
                      value="none"
                    >
                      Move to...
                    </option>,
                    <option
                      value="currentlyReading"
                    >
                      Currently Reading
                    </option>,
                    <option
                      value="wantToRead"
                    >
                      Want to Read
                    </option>,
                    <option
                      value="read"
                    >
                      Read
                    </option>,
                    <option
                      value="none"
                    >
                      None
                    </option>,
                  ],
                  "onChange": [Function],
                  "value": "read",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Move to...",
                      "disabled": true,
                      "value": "none",
                    },
                    "ref": null,
                    "rendered": "Move to...",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Currently Reading",
                      "value": "currentlyReading",
                    },
                    "ref": null,
                    "rendered": "Currently Reading",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Want to Read",
                      "value": "wantToRead",
                    },
                    "ref": null,
                    "rendered": "Want to Read",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Read",
                      "value": "read",
                    },
                    "ref": null,
                    "rendered": "Read",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "None",
                      "value": "none",
                    },
                    "ref": null,
                    "rendered": "None",
                    "type": "option",
                  },
                ],
                "type": "select",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "React Development",
            "className": "book-title",
          },
          "ref": null,
          "rendered": "React Development",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Marcio G.",
            ],
            "className": "book-authors",
          },
          "ref": null,
          "rendered": Array [
            "Marcio G.",
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
